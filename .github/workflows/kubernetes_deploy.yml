name: kubernetes workflow Deploy

on:
  push:

  workflow_dispatch: # allows you to manually run the workflow
    inputs:
      deploy_app:
        description: "Do you want to deploy the app to k8s?"
        required: true
        default: "yes"
        type: choice
        options:
          - yes
          - no
      build_docker:
        description: "Do you want to build docker image?"
        required: true
        default: "no"
        type: choice
        options:
          - yes
          - no
      create_k8s_cluster:
        description: "Choose wether or not you want to create a k8s"
        required: true
        default: "delete"
        type: choice
        options:
          - create
          - delete
          - both
          - nothing
      


jobs:
  build-run-docker-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub #
      if: ${{ github.event.inputs.build_docker == 'yes' }}
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push docker image
      if: ${{ github.event.inputs.build_docker == 'yes' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/toystore:k8s

    - name: Set up kubectl 
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Install eksctl
      run: |
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp 
        sudo mv /tmp/eksctl /usr/local/bin/
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2


    - name: Install eksctl
      # if: ${{ github.event.inputs.create_k8s_cluster == 'create' }}
      run: |
        chmod +x eks-install.sh
        ./eks-install.sh

    - name: Export kubeconfig
      # if: ${{ github.event.inputs.create_k8s_cluster == 'create' }}
      run: |
        export KUBECONFIG=$HOME/.kube/config
        


    - name: Set up Kubeconfig
      if: ${{ github.event.inputs.create_k8s_cluster == 'nothing' }}
      run: |
        mkdir -p  $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
        export KUBECONFIG=$HOME/.kube/config
    
    
    - name: Deploy App to EKS cluster
      # if: ${{ github.event.inputs.deploy_app == 'yes' }}
      run: |
        echo "Deploying toystore app to EKS Cluster ..."
        kubectl apply -f deployment.yml
        kubectl apply -f service.yml

    - name: Delete cluster
      if: ${{ github.event.inputs.create_k8s_cluster == 'delete' }}
      run: |
        echo "Deleting EKS Cluster ..."
        eksctl delete cluster  ghaClusterAutomated --region eu-west-2
